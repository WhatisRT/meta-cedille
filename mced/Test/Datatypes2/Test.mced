--------------------------------------------------------------------------------
-- Test helpers

elet DefineTy' : Desc -> Eval Unit := DefineTy "A" "B" "c" "Q" "P" "R" "r" "x" "y" "z".

elet recAD : ADesc := (θ{λ R : *. R}, θ{monoId}).
elet constAD (t : Term) : ADesc := (θ{λ _ : *. γ{t}}, θ{monoConst ?γ{t}}).

let monoList : Mono ListC := Λ X, Y : *. λ c : Cast X Y.
  extCast ?(ListC X) ?(ListC Y) ?(indList ?X ?(λ l : ListC X. View (ListC Y) (beta' ?(ListC X) l))
    (selfView ?(ListC Y) (nilC ?Y))
    (λ x : X. λ xs : ListC X. λ pxs : View (ListC Y) (beta' ?(ListC X) xs).
      selfView ?(ListC Y)
        (consC ?Y (elimCast ?X ?Y ?c x) (elimView ?(ListC Y) (beta' ?(ListC X) xs) ?pxs)))).

--------------------------------------------------------------------------------
-- Tests

elet TNatDesc : Desc := "TNat" , [CDesc|"tZero" , [ADesc|]; "tSuc" , [ADesc|recAD]].
runMeta DefineTy' TNatDesc.

elet TNatListDesc : Desc := "TNatList" , [CDesc|"tNatNil" , [ADesc|]; "tNatCons" , [ADesc|constAD θ{Nat}; recAD]].
runMeta DefineTy' TNatListDesc.

elet T1Desc : Desc := "T1" , [CDesc|"t11" , [ADesc|]; "t12" , [ADesc|recAD; recAD]].
runMeta DefineTy' T1Desc.

elet T2Desc : Desc := "T2" , [CDesc|"t21" , [ADesc|constAD θ{Nat}]; "t22" , [ADesc|recAD; recAD]].
runMeta DefineTy' T2Desc.

elet T3Desc : Desc := "T3" , [CDesc|"t31" , [ADesc|]; "t32" , [ADesc|θ{List}, θ{monoList}]].
runMeta DefineTy' T3Desc.
