module Category.

-- Temporary workaround to make all the names that `data` needs available
import Datatypes/ModuleCompatibility.

Given Eq.

record Category (obj : *) (hom : Π _, _ : obj. *) where
| identity      : Π a : obj. hom a a
| composition   : Π a, b, c : obj. hom b c -> hom a b -> hom a c
| leftIdentity  : Π a, b : obj. Π f : hom a b. Eq (hom a b) (composition a b b (identity b) f) f
| rightIdentity : Π a, b : obj. Π f : hom a b. Eq (hom a b) (composition a a b f (identity a)) f
| associativity : Π a, b, c, d : obj. Π f : hom a b. Π g : hom b c. Π h : hom c d.
                 Eq (hom a d) (composition a b d (composition b c d h g) f) (composition a c d h (composition a b c g f)).

let identity (obj : *) (hom : Π _, _ : obj. *) (C : Category obj hom) : Π a : obj. hom a a :=
  CategoryFold obj hom (Π a : obj. hom a a)
    (λ identity      : Π a : obj. hom a a.
    λ composition   : Π a, b, c : obj. hom b c -> hom a b -> hom a c.
    λ leftIdentity  : Π a, b : obj. Π f : hom a b. Eq (hom a b) (composition a b b (identity b) f) f.
    λ rightIdentity : Π a, b : obj. Π f : hom a b. Eq (hom a b) (composition a a b f (identity a)) f.
    λ associativity : Π a, b, c, d : obj. Π f : hom a b. Π g : hom b c. Π h : hom c d.
                     Eq (hom a d) (composition a b d (composition b c d h g) f) (composition a c d h (composition a b c g f)).
      identity) C.

let composition (obj : *) (hom : Π _, _ : obj. *) (C : Category obj hom) : Π a, b, c : obj. hom b c -> hom a b -> hom a c :=
  CategoryFold obj hom (Π a, b, c : obj. hom b c -> hom a b -> hom a c)
    (λ identity      : Π a : obj. hom a a.
    λ composition   : Π a, b, c : obj. hom b c -> hom a b -> hom a c.
    λ leftIdentity  : Π a, b : obj. Π f : hom a b. Eq (hom a b) (composition a b b (identity b) f) f.
    λ rightIdentity : Π a, b : obj. Π f : hom a b. Eq (hom a b) (composition a a b f (identity a)) f.
    λ associativity : Π a, b, c, d : obj. Π f : hom a b. Π g : hom b c. Π h : hom c d.
                     Eq (hom a d) (composition a b d (composition b c d h g) f) (composition a c d h (composition a b c g f)).
      composition) C.

-- This seems to loop forever?
-- record Iso (obj : *) (hom : Π _, _ : obj. *) (C : Category obj hom) (a, b : obj) where
-- | f : hom a b
-- | inv : hom b a
-- | lInv : Eq (hom a a) (composition obj hom C a b a inv f) (identity obj hom C a)
-- | rInv : Eq (hom b b) (composition obj hom C b a b f inv) (identity obj hom C b).

endModule.
