let Nat := ∀ X : *
  Π _ : X
  Π _ : Π _ : X X
    X.

let zero := Λ X : *
  λ z : X
  λ s : Π _ : X X
    z : Nat.

let suc := λ n : Nat Λ X : *
  λ z : X
  λ s : Π _ : X X
    [s [[<n X> z] s]] : Π _ : Nat Nat.

let recursionNat :=
  Λ X : * λ rz : X λ rs : Π _ : Nat Π _ : X X λ n : Nat
    [<<pr2 Nat> X>
      [[<n
        [[Product Nat] X]>
        [[<<prodPair Nat> X> zero] rz]]
        [<<<recursionProduct Nat> X> [[Product Nat] X]>
          λ k : Nat λ x : X [[<<prodPair Nat> X> [suc k]] [[rs k] x]]]]]
  : ∀ X : * Π _ : X Π _ : Π _ : Nat Π _ : X X Π n : Nat X.

let recursionNat' :=
  Λ X : * λ rz : X λ rs : Π _ : X X λ n : Nat
    [[<n X> rz] rs]
  : ∀ X : * Π _ : X Π _ : Π _ : X X Π n : Nat X.
