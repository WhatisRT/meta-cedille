--------------------------------------------------------------------------------
-- Helper functions for strings
--------------------------------------------------------------------------------

b-let stringNil : String := Λ X : *.
  λ sc : Char -> X -> X. λ sn : X. sn.
b-let stringCons (c : Char) (s : String) : String := Λ X : *.
  λ sc : Char -> X -> X. λ sn : X. sc c (s ?X sc sn).

b-let stringToList (s : String) : List Char :=
  s ?(List Char) (λ c : Char. λ rec : List Char. cons ?Char c rec) (nil ?Char).

b-let stringFromList (s : List Char) : String :=
  s ?String stringNil
    (λ c : Char. λ rec : String. stringCons c rec).

b-let stringApp (s, s' : String) : String :=
  s ?String stringCons s'.

b-let stringConcat (l : List String) : String :=
  l ?String
    stringNil
    (λ s : String. λ rec : String. stringApp s rec).

-- Equality

b-let stringEq (s, s' : String) : Bool :=
  listEq ?Char charEq (stringToList s) (stringToList s').
