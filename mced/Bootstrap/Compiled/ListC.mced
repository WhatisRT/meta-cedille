let ListF := λ A : * λ R : * ∀ X : * Π _ : X Π _ : Π _ : A Π _ : R X X : Π A : * Π R : * *.
let monoListF := Λ A : * Λ X : * Λ Y : * λ c : [[Cast X] Y] <<<<intrCast [[ListF A] X]> [[ListF A] Y]> λ l : [[ListF A] X] Λ Z : * λ a1 : Z λ a2 : Π _ : A Π _ : Y Z [[<l Z> a1] λ a : A λ x : X [[a2 a] [<<<elimCast X> Y> c> x]]]> λ l : [[ListF A] X] [<beta [[ListF A] X]> l]> : ∀ A : * [Mono [ListF A]].
let nilF := Λ A : * Λ R : * Λ X : * λ n : X λ c : Π _ : A Π _ : R X n : ∀ A : * ∀ R : * [[ListF A] R].
let consF := Λ A : * Λ R : * λ a : A λ as : R Λ X : * λ n : X λ c : Π _ : A Π _ : R X [[c a] as] : ∀ A : * ∀ R : * Π a : A Π as : R [[ListF A] R].
let WkIndListF := λ A : * λ R : * λ l : [[ListF A] R] ∀ P : Π _ : [[ListF A] R] * Π _ : [P <<nilF A> R>] Π _ : Π a : A Π l : R [P [[<<consF A> R> a] l]] [P l] : Π A : * Π R : * Π l : [[ListF A] R] *.
let monoWkIndListF := Λ A : * Λ R1 : * Λ R2 : * λ c : [[Cast R1] R2] λ n : [[ListF A] R1] <<<<intrCast [[[WkIndListF A] R1] n]> [[[WkIndListF A] R2] [<<<elimCast [[ListF A] R1]> [[ListF A] R2]> [<<<monoListF A> R1> R2> c]> n]]> λ m : [[[WkIndListF A] R1] n] Λ P : Π _ : [[ListF A] R2] * λ z : [P <<nilF A> R2>] λ s : Π a : A Π k : R2 [P [[<<consF A> R2> a] k]] [[<m λ y : [[ListF A] R1] [P [<<<elimCast [[ListF A] R1]> [[ListF A] R2]> [<<<monoListF A> R1> R2> c]> y]]> z] λ a : A λ m : R1 [[s a] [<<<elimCast R1> R2> c> m]]]> λ m : [[[WkIndListF A] R1] n] [<beta [[[WkIndListF A] R1] n]> m]> : ∀ A : * ∀ R1 : * ∀ R2 : * Π c : [[Cast R1] R2] Π n : [[ListF A] R1] [[Cast [[[WkIndListF A] R1] n]] [[[WkIndListF A] R2] [<<<elimCast [[ListF A] R1]> [[ListF A] R2]> [<<<monoListF A> R1> R2> c]> n]]].
let nilWkIndListF := Λ A : * Λ R : * Λ P : Π _ : [[ListF A] R] * λ n : [P <<nilF A> R>] λ c : Π a : A Π l : R [P [[<<consF A> R> a] l]] n : ∀ A : * ∀ R : * [[[WkIndListF A] R] <<nilF A> R>].
let consWkIndListF := Λ A : * Λ R : * λ a : A λ r : R Λ P : Π _ : [[ListF A] R] * λ n : [P <<nilF A> R>] λ c : Π a : A Π l : R [P [[<<consF A> R> a] l]] [[c a] r] : ∀ A : * ∀ R : * Π a : A Π r : R [[[WkIndListF A] R] [[<<consF A> R> a] r]].
let ListFI := λ A : * λ R : * [[Iota [[ListF A] R]] [[WkIndListF A] R]] : Π A : * Π R : * *.
let monoListFI := Λ A : * [[[[iotaMono [ListF A]] [WkIndListF A]] <monoListF A>] <monoWkIndListF A>] : ∀ A : * [Mono [ListFI A]].
let ListC := λ A : * [Rec [ListFI A]] : Π A : * *.
let rollList := Λ A : * <[roll [ListFI A]] <monoListFI A>> : ∀ A : * Π _ : [[ListFI A] [ListC A]] [ListC A].
let unrollList := Λ A : * <[unroll [ListFI A]] <monoListFI A>> : ∀ A : * Π _ : [ListC A] [[ListFI A] [ListC A]].
let nilC := Λ A : * [<rollList A> [[[<<iPair [[ListF A] [ListC A]]> [[WkIndListF A] [ListC A]]> <<nilF A> [ListC A]>] <<nilWkIndListF A> [ListC A]>] [<beta [[ListF A] [ListC A]]> <<nilF A> [ListC A]>]]] : ∀ A : * [ListC A].
let consC := Λ A : * λ a : A λ r : [ListC A] [<rollList A> [[[<<iPair [[ListF A] [ListC A]]> [[WkIndListF A] [ListC A]]> [[<<consF A> [ListC A]> a] r]] [[<<consWkIndListF A> [ListC A]> a] r]] [<beta [[ListF A] [ListC A]]> [[<<consF A> [ListC A]> a] r]]]] : ∀ A : * Π a : A Π r : [ListC A] [ListC A].
let ListRec := λ A : * λ P : Π _ : [ListC A] * λ x : [ListC A] λ N : * λ C : * Π _ : N Π _ : C Π _ : N Π _ : C [P x] : Π A : * Π P : Π _ : [ListC A] * Π x : [ListC A] Π N : * Π C : * *.
let ListN := λ A : * λ P : Π _ : [ListC A] * ∀ N : * ∀ C : * Π _ : N Π _ : C [P <nilC A>] : Π A : * Π P : Π _ : [ListC A] * *.
let ListC' := λ A : * λ P : Π _ : [ListC A] * ∀ N : * ∀ C : * Π a : A Π r : [[Iota [ListC A]] λ x : [ListC A] [[[[[ListRec A] P] x] N] C]] Π _ : N Π _ : C [P [[<consC A> a] [<<iPr1 [ListC A]> λ x : [ListC A] [[[[[ListRec A] P] x] N] C]> r]]] : Π A : * Π P : Π _ : [ListC A] * *.
let ListCLR := λ A : * λ n : [ListC A] ∀ P : Π _ : [ListC A] * [[[[[ListRec A] P] n] [[ListN A] P]] [[ListC' A] P]] : Π A : * Π n : [ListC A] *.
let ListLR := λ A : * [[Iota [ListC A]] [ListCLR A]] : Π A : * *.
let recLRList := Λ A : * Λ P : Π _ : [ListC A] * λ z : [[ListN A] P] λ s : [[ListC' A] P] λ n : [ListLR A] [[<[<<iPr2 [ListC A]> [ListCLR A]> n] P> z] s] : ∀ A : * ∀ P : Π _ : [ListC A] * Π z : [[ListN A] P] Π s : [[ListC' A] P] Π n : [ListLR A] Π _ : [[ListN A] P] Π _ : [[ListC' A] P] [P [<<iPr1 [ListC A]> [ListCLR A]> n]].
let nilLR := Λ A : * [[[<<iPair [ListC A]> [ListCLR A]> <nilC A>] Λ P : Π _ : [ListC A] * λ z : [[ListN A] P] λ s : [[ListC' A] P] <<z [[ListN A] P]> [[ListC' A] P]>] [<beta [ListC A]> <nilC A>]] : ∀ A : * [ListLR A].
let consLR := Λ A : * λ a : A λ r : [ListLR A] [[[<<iPair [ListC A]> [ListCLR A]> [[<consC A> a] [<<iPr1 [ListC A]> [ListCLR A]> r]]] Λ P : Π _ : [ListC A] * λ z : [[ListN A] P] λ s : [[ListC' A] P] [[<<s [[ListN A] P]> [[ListC' A] P]> a] [[[<<iPair [ListC A]> λ x : [ListC A] [[[[[ListRec A] P] x] [[ListN A] P]] [[ListC' A] P]]> [<<iPr1 [ListC A]> [ListCLR A]> r]] <[<<iPr2 [ListC A]> [ListCLR A]> r] P>] [<beta [ListC A]> [<<iPr1 [ListC A]> [ListCLR A]> r]]]]] [<beta [ListC A]> [[<consC A> a] [<<iPr1 [ListC A]> [ListCLR A]> r]]]] : ∀ A : * Π a : A Π r : [ListLR A] [ListLR A].
let rollListLR := Λ A : * <<<<intrCast [[ListFI A] [ListLR A]]> [ListLR A]> λ n : [[ListFI A] [ListLR A]] [[<[<<iPr1 [[ListF A] [ListLR A]]> [[WkIndListF A] [ListLR A]]> n] [ListLR A]> <nilLR A>] <consLR A>]> λ n : [[ListFI A] [ListLR A]] [[<[<<iPr2 [[ListF A] [ListLR A]]> [[WkIndListF A] [ListLR A]]> n] λ x : [[ListF A] [ListLR A]] [[<<UEq [ListLR A]> [[ListF A] [ListLR A]]> [[<x [ListLR A]> <nilLR A>] <consLR A>]] x]> [<beta [[ListF A] [ListLR A]]> <<nilF A> [ListLR A]>]] λ a : A λ k : [ListLR A] [<beta [[ListF A] [ListLR A]]> [[<<consF A> [ListLR A]> a] k]]]> : ∀ A : * [[Cast [[ListFI A] [ListLR A]]] [ListLR A]].
let toList := Λ A : * <<[recLB [ListFI A]] [ListLR A]> <rollListLR A>> : ∀ A : * [[Cast [ListC A]] [ListLR A]].
let indListN := Λ A : * Λ P : Π _ : [ListC A] * λ p : [P <nilC A>] Λ N : * Λ C : * λ _ : N λ _ : C p : ∀ A : * ∀ P : Π _ : [ListC A] * Π p : [P <nilC A>] [[ListN A] P].
let indListC := Λ A : * Λ P : Π _ : [ListC A] * λ p : Π a : A Π r : [ListC A] Π _ : [P r] [P [[<consC A> a] r]] Λ N : * Λ C : * λ a : A λ n : [[Iota [ListC A]] λ x : [ListC A] [[[[[ListRec A] P] x] N] C]] λ z : N λ s : C [[[p a] [<<iPr1 [ListC A]> λ x : [ListC A] [[[[[ListRec A] P] x] N] C]> n]] [[[[[<<iPr2 [ListC A]> λ x : [ListC A] [[[[[ListRec A] P] x] N] C]> n] z] s] z] s]] : ∀ A : * ∀ P : Π _ : [ListC A] * Π p : Π a : A Π r : [ListC A] Π _ : [P r] [P [[<consC A> a] r]] [[ListC' A] P].
let indList := Λ A : * Λ P : Π _ : [ListC A] * λ pn : [P <nilC A>] λ pc : Π a : A Π r : [ListC A] Π _ : [P r] [P [[<consC A> a] r]] λ l : [ListC A] [[[[[<<recLRList A> P> [<<indListN A> P> pn]] [<<indListC A> P> pc]] [<<<elimCast [ListC A]> [ListLR A]> <toList A>> l]] [<<indListN A> P> pn]] [<<indListC A> P> pc]] : ∀ A : * ∀ P : Π _ : [ListC A] * Π pn : [P <nilC A>] Π pc : Π a : A Π r : [ListC A] Π _ : [P r] [P [[<consC A> a] r]] Π l : [ListC A] [P l].
let recList := Λ A : * Λ X : * λ n : X λ c : Π _ : A Π _ : [ListC A] Π _ : X X [[<<indList A> λ _ : [ListC A] X> n] c] : ∀ A : * ∀ X : * Π n : X Π c : Π _ : A Π _ : [ListC A] Π _ : X X Π _ : [ListC A] X.
let matchList := Λ A : * Λ X : * λ n : X λ c : Π _ : A Π _ : [ListC A] X λ l : [ListC A] [[<[<<iPr1 [[ListF A] [ListC A]]> [[WkIndListF A] [ListC A]]> [<unrollList A> l]] X> n] c] : ∀ A : * ∀ X : * Π n : X Π c : Π _ : A Π _ : [ListC A] X Π l : [ListC A] X.