let nothingTerm := [[appLTerm quoteSq] <nil App>] : Term.
let nothingTerm1 := λ _ : Term nothingTerm : Π _ : Term Term.
let nothingTerm2 := λ _ : Term λ _ : Term nothingTerm : Π _ : Term Π _ : Term Term.
let nothingTerm3 := λ _ : Term λ _ : Term λ _ : Term nothingTerm : Π _ : Term Π _ : Term Π _ : Term Term.
let cedilleTerm := λ s : String [sVarTerm s] : Π s : String Term.
let cedilleTerm1 := λ s : String λ t : Term [[appSingle [sVarTerm s]] t] : Π s : String Π t : Term Term.
let cedilleTerm2 := λ s : String λ t : Term λ t' : Term [[[appDouble [sVarTerm s]] t] t'] : Π s : String Π t : Term Π t' : Term Term.
let cedilleTerm3 := λ s : String λ t : Term λ t' : Term λ t'' : Term [[appSingle [[[appDouble [sVarTerm s]] t] t']] t''] : Π s : String Π t : Term Π t' : Term Π t'' : Term Term.
let initTermToTerm := λ t : iTerm [[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[<t Term> varTerm] sortTerm] λ c : Const [[[[[[[[<c Term> [sVarTerm [[stringCons κC] [[stringCons κh] [[stringCons κa] [[stringCons κr] stringNil]]]]]] charTerm] [sVarTerm [[stringCons κc] [[stringCons κh] [[stringCons κa] [[stringCons κr] [[stringCons κE] [[stringCons κq] stringNil]]]]]]]] [sVarTerm [[stringCons κM] stringNil]]] [sVarTerm [[stringCons κb] [[stringCons κi] [[stringCons κn] [[stringCons κd] [[stringCons κM] stringNil]]]]]]] [sVarTerm [[stringCons κp] [[stringCons κu] [[stringCons κr] [[stringCons κe] [[stringCons κM] stringNil]]]]]]] [sVarTerm [[stringCons κc] [[stringCons κa] [[stringCons κt] [[stringCons κc] [[stringCons κh] [[stringCons κE] [[stringCons κr] [[stringCons κr] stringNil]]]]]]]]]] [sVarTerm [[stringCons κf] [[stringCons κi] [[stringCons κx] stringNil]]]]]] [cedilleTerm1 [[stringCons κπ] [[stringCons κ1] stringNil]]]] [cedilleTerm1 [[stringCons κπ] [[stringCons κ2] stringNil]]]] [cedilleTerm2 [[stringCons κβ] stringNil]]] [cedilleTerm2 [[stringCons κδ] stringNil]]] [cedilleTerm1 [[stringCons κσ] stringNil]]] [cedilleTerm3 [[stringCons κφ] stringNil]]] [cedilleTerm2 [[stringCons κ=] stringNil]]] appSingle] appSingleE] λ t : Term λ _ : String λ t' : Term λ t'' : Term [[[[cedilleTerm3 [[stringCons κρ] stringNil]] t] t'] t'']] [binderTerm forallBinder]] [binderTerm piBinder]] [binderTerm lambdaBinder]] [binderTerm LambdaBinder]] λ _ : String [cedilleTerm2 [[stringCons κι] stringNil]]] λ t : Term λ t' : Term λ _ : String λ _ : Term [[[cedilleTerm2 [[stringCons κς] [[stringCons κP] [[stringCons κa] [[stringCons κi] [[stringCons κr] stringNil]]]]]] t] t']] nothingTerm1] nothingTerm2] nothingTerm1] nothingTerm2] nothingTerm3] nothingTerm3] nothingTerm2] nothingTerm2] nothingTerm3] nothingTerm1] nothingTerm1] nothingTerm1] nothingTerm1] nothingTerm] nothingTerm1] nothingTerm2] nothingTerm] nothingTerm1] nothingTerm1] : Π t : iTerm Term.
let telescopeFromTypeHelper := λ t : Term [[<<prodPair [List Param]> Term> telNil] t] : Π t : Term [[Product Telescope] Term].
let telCons := λ n : String λ T : Term [<cons [[Product Bool] PreParam]> [[mkParam false] [[mkPreParam n] T]]] : Π n : String Π T : Term Π as : [List [[Product Bool] PreParam]] [List [[Product Bool] PreParam]].
let telConsE := λ n : String λ T : Term [<cons [[Product Bool] PreParam]> [[mkParam true] [[mkPreParam n] T]]] : Π n : String Π T : Term Π as : [List [[Product Bool] PreParam]] [List [[Product Bool] PreParam]].
let telescopeFromType := [[[[[[[<recursionTerm [[Product Telescope] Term]> λ v : Var [telescopeFromTypeHelper [varTerm v]]] λ s : Sort [telescopeFromTypeHelper [sortTerm s]]] λ b : Binder λ n : String λ t : Term λ t' : Term λ rect : [[Product Telescope] Term] λ rect' : [[Product Telescope] Term] [[[[<b [[Product Telescope] Term]> [telescopeFromTypeHelper [[[lambdaTerm n] t] t']]] [telescopeFromTypeHelper [[[LambdaTerm n] t] t']]] [[<<<productMap1 Telescope> Term> [List [[Product Bool] PreParam]]> [[telCons n] t]] rect']] [[<<<productMap1 Telescope> Term> [List [[Product Bool] PreParam]]> [[telConsE n] t]] rect']]] λ t : Term λ app : [List App] λ _ : [[Product Telescope] Term] λ _ : [List [[Product Bool] [[Product Telescope] Term]]] [telescopeFromTypeHelper [[appLTerm t] app]]] λ c : Char [telescopeFromTypeHelper [charTerm c]]] [telescopeFromTypeHelper unknownTerm]] λ u : Term λ _ : [[Product Telescope] Term] [telescopeFromTypeHelper [unquoteTerm u]]] : Π _ : Term [[Product Telescope] Term].