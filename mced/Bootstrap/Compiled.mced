import Bootstrap/Stage-1/Comment.
import Bootstrap/Stage-1/Parens.
import Bootstrap/Stage-1/String.

seteval eval init stmt.

import Bootstrap/Stage-1/MetaAliases.
import Bootstrap/Stage-1/Quote.

--------------------------------------------------------------------------------
-- Variant of bootstrapping that uses the compiler. Should be
-- equivalent to regular bootstrapping.
--------------------------------------------------------------------------------

import Bootstrap/Compiled/DSum.
import Bootstrap/Compiled/Product.
import Bootstrap/Compiled/Sum.

import Bootstrap/Compiled/Void.
import Bootstrap/Compiled/Unit.

import Bootstrap/Compiled/Nat.
import Bootstrap/Compiled/Bool.
import Bootstrap/Compiled/List.
import Bootstrap/Compiled/Maybe.

import Bootstrap/Compiled/Term.
import Bootstrap/Compiled/MLLet.

-- Stage 3

import Bootstrap/Compiled/StringHelpers.
import Bootstrap/Compiled/TermRec.

import Bootstrap/Compiled/StringNotation.
import Bootstrap/Compiled/ListNotation.
import Bootstrap/Compiled/QuoteTerm.
import Bootstrap/Compiled/Quoters.

import Bootstrap/Compiled/ListExt.
import Bootstrap/Compiled/StringExt.
import Bootstrap/Compiled/NatHelpers.
import Bootstrap/Compiled/ShowTerm.
import Bootstrap/Compiled/ConversionHelpers.

import Bootstrap/Compiled/ModuleDefinitions.
import Bootstrap/Compiled/Eval.
import Bootstrap/Compiled/Output.
import Bootstrap/Compiled/ModuleFunctions.
import Bootstrap/Compiled/Syntax.

seteval [evalNewStmt emptyEvalState] init newStmt.

-- this defines the initial dictionary

runMeta stmtToNewStmt (convertLetInfo (mkLetInfo (mkModuleDictName emptyModuleDict) θ{emptyModuleDict} (just ?Term θ{ModuleDict}))).

import Bootstrap/Stage-3/InfixNotations.

import Bootstrap/Stage-3/NatSyntax.
