let Maybe := λ A : * [[Sum A] Unit].
let just := Λ A : * λ a : A [<<inl A> Unit> a].
let nothing := Λ A : * [<<inr A> Unit> tt].

let maybe := Λ A : * Λ B : * λ default : B λ f : Π _ : A B λ x : [Maybe A]
  [[[<<<recursionSum A> Unit> B> (λ a : A [f a])] (λ _ : Unit default)] x].
let mapMaybe :=
  Λ A : * Λ B : * λ f : Π _ : A B λ x : [Maybe A]
    [[[<<maybe A> [Maybe B]> [<<inr B> Unit> tt]] λ a : A [<just B> [f a]]] x].
