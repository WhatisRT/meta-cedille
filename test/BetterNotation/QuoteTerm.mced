--------------------------------------------------------------------------------
-- Quotation and antiquotation for terms
--
-- The syntax is θ{...} for quotation and γ{...} for antiquotation.
--------------------------------------------------------------------------------

-- We want to define quoteTerm, the rest are helper functions

b-let appDouble (t, t', t'' : Term) :=  appLTerm t [App| mkAppU t', mkAppU t''].

b-let quoteAst : Term := sortTerm init$sort$=ast=.
b-let quoteSq : Term := sortTerm init$sort$=sq=.
b-let quoteTemp : Term := quoteSq. -- this is for things that are not yet implemented

b-let quoteVar (v : init$var) : Term :=
  appSingle
    (sVarTerm "sVarTerm")
    (v ?Term (λ n : String. quote$String n) (λ i : init$index. quoteTemp)). -- quotation of indices is not supported

b-let quoteBinder (b : Binder) : Term :=
  b ?Term (sVarTerm "lambdaBinder") (sVarTerm "LambdaBinder") (sVarTerm "piBinder") (sVarTerm "forallBinder").

b-let quoteBool (b : Bool) : Term := ifthenelse ?Term b (sVarTerm "true") (sVarTerm "false").

b-let quoteAppLeft (a : App) : Term :=
  appDouble (sVarTerm "mkApp") (quoteBool (appErased a)) (appTerm a). -- don't need to quote the term here

b-let quoteTerm (t : Term) : Term :=
  recursionTerm ?Term
    (λ v : init$var. quoteVar v)
    (λ s : init$sort. s ?Term (sVarTerm "quoteAst") (sVarTerm "quoteSq"))
    (λ b : Binder. λ n : String. λ T : Term. λ t : Term. λ recT : Term. λ rect : Term.
      appLTerm (sVarTerm "binderTerm") (toAppU [Term| quoteBinder b, quote$String n, recT, rect]))
    (λ t : Term. λ l : List App. λ rect : Term. λ recl : List App.
      appDouble (sVarTerm "appLTerm") rect (quoteTermList (sVarTerm "App") (map ?App ?Term quoteAppLeft recl)))
    (λ u : Term. λ recuf : Term. u)
    t.

-- Syntax

b-let init$singleTerm$=theta==lbrace=_space'__multiTerm_=rbrace= (_ : init$space') (t : Term) : Term := quoteTerm t.
b-let init$singleTerm$=gamma==lbrace=_space'__multiTerm_=rbrace= (_ : init$space') (t : Term) : Term := unquoteTerm t.
-- unquoteTerm is just a constructor of Term

seteval eval init stmt.