-- the definition of Nat is in Induction.mced

let recNat [X : *] (x : X) (step : Π _ : Nat. Π _ : X. X) : Π _ : Nat. X :=
  inductionNat ?(λ _ : Nat. X) x step.

let one := suc zero.
let two := suc one.
let three := suc two.
let four := suc three.
let five := suc four.
let six := suc five.
let seven := suc six.
let eight := suc seven.
let nine := suc eight.
let ten := suc nine.

let add (n, m : Nat) : Nat := recNat ?Nat n (λ _ : Nat. λ rec : Nat. suc rec) m.
let mul (n, m : Nat) : Nat := recNat ?Nat zero (λ _ : Nat. λ rec : Nat. add rec n) m.
let pred (n : Nat) : Nat := recNat ?Nat zero (λ n' : Nat. λ _ : Nat. n') n.

let isZero : Π _ : Nat. Bool := recNat ?Bool true (λ _ : Nat. λ _ : Bool. false).

let natEq : Π _ : Nat. Π _ : Nat. Bool :=
  recNat ?(Π _ : Nat. Bool)
    isZero
    (λ _ : Nat. λ rec : Π _ : Nat. Bool. recNat ?Bool false (λ n : Nat. λ _ : Bool. rec n)).