data Maybe' (A : *) where
| nothing' : Maybe' A
| just'    : Π _ : A. Maybe' A.

let maybe' [A : *] [B : *] (default : B) (f : Π _ : A. B) (x : Maybe' A) : B := Maybe'Fold A B default f x.

let maybeToList [A : *] (x : Maybe' A) : List A :=
  maybe' ?A ?(List A) [A|] (λ a : A. [A|a]) x.